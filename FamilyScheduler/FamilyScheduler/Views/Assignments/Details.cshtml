@model FamilyScheduler.Models.DTO.AssignmentDTO

@{
    ViewData["Title"] = "Details";
}
<!--View that is used to display all of the details of an Assignment and its related data.-->
<h1>Details</h1>

<div>
    <h4>Assignment</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FullName)
        </dt>
        <dd class="col-sm-10">
            @Model.FullName
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TaskDescription)
        </dt>
        <dd class="col-sm-10">
            @Model.TaskDescription
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DueDate)
        </dt>
        <dd class="col-sm-10">
            @Model.DueDate.ToShortDateString()
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Completed)
        </dt>
        <dd class="col-sm-10">
            @Model.Completed
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TaskTypeDescription)
        </dt>
        <dd class="col-sm-10">
            @Model.TaskTypeDescription
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FrequencyDescription)
        </dt>
        <dd class="col-sm-10">
            @Model.FrequencyDescription
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WorkloadDescription)
        </dt>
        <dd class="col-sm-10">
            @Model.WorkloadDescription
        </dd>
    </dl>
</div>
<div>
    @if(@User.IsInRole("Admin") || @User.IsInRole("SuperUser")){
    <a asp-action="Edit" asp-route-id="@Model?.AssignmentID">Edit</a>
    }
    <a asp-action="List">Back to List</a>
</div>
