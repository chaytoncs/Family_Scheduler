// <auto-generated />
using System;
using FamilyScheduler.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamilyScheduler.Migrations
{
    [DbContext(typeof(FamilySchedulerContext))]
    [Migration("20221107013228_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("FamilyScheduler.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssignmentID");

                    b.HasIndex("TaskID");

                    b.HasIndex("UserID");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("FamilyScheduler.Models.Frequency", b =>
                {
                    b.Property<int>("FrequencyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("FrequencyID");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("FamilyScheduler.Models.Task", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("FrequencyID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkloadID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TaskID");

                    b.HasIndex("FrequencyID");

                    b.HasIndex("TaskTypeID");

                    b.HasIndex("WorkloadID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("FamilyScheduler.Models.TaskType", b =>
                {
                    b.Property<int>("TaskTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("TaskTypeID");

                    b.ToTable("TaskTypes");
                });

            modelBuilder.Entity("FamilyScheduler.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FamilyScheduler.Models.Workload", b =>
                {
                    b.Property<int>("WorkloadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorkloadID");

                    b.ToTable("Workloads");
                });

            modelBuilder.Entity("FamilyScheduler.Models.Assignment", b =>
                {
                    b.HasOne("FamilyScheduler.Models.Task", "Task")
                        .WithMany("Assignments")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyScheduler.Models.User", "User")
                        .WithMany("Assignments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FamilyScheduler.Models.Task", b =>
                {
                    b.HasOne("FamilyScheduler.Models.Frequency", "Frequency")
                        .WithMany("Tasks")
                        .HasForeignKey("FrequencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyScheduler.Models.TaskType", "TaskType")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyScheduler.Models.Workload", "Workload")
                        .WithMany("Tasks")
                        .HasForeignKey("WorkloadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Frequency");

                    b.Navigation("TaskType");

                    b.Navigation("Workload");
                });

            modelBuilder.Entity("FamilyScheduler.Models.Frequency", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("FamilyScheduler.Models.Task", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("FamilyScheduler.Models.TaskType", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("FamilyScheduler.Models.User", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("FamilyScheduler.Models.Workload", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
